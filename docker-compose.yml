services:
  gestacao-segura-api:
    image: 'gestacao-segura:latest'
    build:
      context: .
    container_name: gestacao-segura-api
    depends_on:
      postgres-db:
        condition: service_healthy
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:${POSTGRES_PORT}/${POSTGRES_DB}?currentSchema=fiap
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - gestacao-segura-api-network

  postgres-db:
    image: postgres:16.3
    container_name: postgres-db
    volumes:
      - ./scripts-db/01-create-schema.sql:/docker-entrypoint-initdb.d/01-create-schema.sql
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - gestacao-segura-api-network
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 3s
      retries: 5


volumes:
  pgdata:

networks:
  gestacao-segura-api-network:
    driver: bridge
